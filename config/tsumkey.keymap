#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 3

// OS設定を日本語キーボードのまま使用するための変換定義
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角
#define JP_BSLH         INT1              // (backslash)

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        mouse_button1 {
            bindings = <&mkp MB1>;
            key-positions = <16 17>;
        };

        mouse_button2 {
            bindings = <&mkp MB2>;
            key-positions = <17 18>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <24 25>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <26 27>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W           &kp E           &kp R            &kp T          &kp Y          &kp U           &kp I           &kp O            &kp P
&mt LSHIFT A  &kp S           &kp D           &kp F            &kp G          &kp H          &kp J           &kp K           &kp L            &kp JP_COLON
&mt LCTRL Z   &mt LALT X      &mt LCTRL C     &mt LSHIFT V     &kp B          &kp N          &kp M           &kp COMMA       &kp DOT          &kp SLASH
&kp LEFT_GUI  &none           &kp UP_ARROW    &lt 3 ESC        &lt 1 SPACE    &lt 2 ENTER    &mkp MB1        &mmv MOVE_UP    &none            &kp MINUS
&none         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp TAB        &kp BACKSPACE  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
            >;
        };

        layer_1 {
            bindings = <
&kp JP_QUOTE  &kp JP_DQUOTE   &kp EXCLAMATION  &trans            &kp JP_BACKQUOTE    &kp JP_PIPE       &kp JP_LPAREN    &kp JP_RPAREN    &trans           &kp PERCENT
&kp JP_AT     &kp SEMICOLON   &kp DOLLAR       &kp JP_PLUS       &kp JP_ASTERISK     &kp HASH          &kp JP_LBRACKET  &kp JP_RBRACKET  &trans           &kp JP_CARET
&trans        &trans          &kp JP_COLON     &trans            &kp JP_BSLH         &kp JP_AMPERSAND  &kp JP_LBRACE    &kp JP_RBRACE    &trans           &kp JP_TILDE
&kp LEFT_GUI  &trans          &kp UP_ARROW     &lt 3 ESC         &lt 1 SPACE         &lt 2 ENTER       &mkp MB1         &mmv MOVE_UP     &trans           &kp JP_UNDERSCORE
&trans        &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT_ARROW   &kp TAB             &kp DELETE        &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F1        &kp F2          &kp F3          &kp F4           &kp F5         &kp COMMA      &kp NUMBER_7    &kp NUMBER_8    &kp NUMBER_9     &trans
&kp F6        &kp F7          &kp F8          &kp F9           &kp F10        &kp DOT        &kp NUMBER_4    &kp NUMBER_5    &kp NUMBER_6     &trans
&kp F11       &kp F12         &trans          &trans           &trans         &kp NUMBER_0   &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3     &trans
&kp LEFT_GUI  &trans          &kp UP_ARROW    &lt 3 ESC        &lt 1 SPACE    &lt 2 ENTER    &mkp MB1        &mmv MOVE_UP    &trans           &kp MINUS
&trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp TAB        &kp BACKSPACE  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans          &trans          &trans           &trans    &bt BT_CLR  &bt BT_CLR_ALL  &trans          &trans           &trans
&trans  &trans          &trans          &trans           &trans    &trans      &trans          &trans          &trans           &trans
&trans  &trans          &trans          &trans           &trans    &trans      &trans          &trans          &trans           &trans
&trans  &trans          &kp UP_ARROW    &trans           &trans    &trans      &mkp MB1        &mmv MOVE_UP    &trans           &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans    &mkp MB2    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans
            >;
        };
    };
};